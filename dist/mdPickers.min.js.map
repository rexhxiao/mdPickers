{"version":3,"sources":["mdPickers.min.js"],"names":["TimePickerCtrl","$scope","$mdDialog","time","autoSwitch","$mdMedia","self","this","VIEW_HOURS","VIEW_MINUTES","currentView","moment","console","log","clockHours","parseInt","format","clockMinutes","minutes","switchView","setAM","hours","hour","setPM","cancel","confirm","hide","toDate","ClockCtrl","TYPE_HOURS","TYPE_MINUTES","STEP_DEG","steps","CLOCK_TYPES","range","getPointerStyle","divider","type","degrees","Math","round","selected","-webkit-transform","-ms-transform","transform","setTimeByDeg","deg","setTime","locale","init","i","push","DatePickerCtrl","$timeout","currentDate","options","date","minDate","isValid","maxDate","displayFormat","dateFilter","angular","isFunction","selectingYear","isBefore","add","isAfter","yearItems","currentIndex_","PAGE_SIZE","START","year","END","getItemAtIndex","index","getLength","min","floor","abs","selectYear","animate","showYear","yearTopIndex","showCalendar","animating","noop","then","CalendarCtrl","dow","localeData","firstDayOfWeek","weekDays","concat","weekdaysMin","slice","daysInMonth","getDaysInMonth","days","firstDay","day","length","arr","value","enabled","isDayEnabled","selectDate","dom","nextMonth","prevMonth","subtract","updateDaysInMonth","$watch","unix","newValue","oldValue","formatValidator","isDate","minDateValidator","maxDateValidator","filterValidator","filter","module","config","$mdIconProvider","mdpIconsRegistry","forEach","icon","id","url","run","$templateCache","put","svg","constant","directive","$mdUtil","restrict","priority","compile","element","inputContainer","getClosest","toggleClass","$animate","bindToController","replace","template","controller","controllerAs","link","scope","attrs","ctrl","timepickerCtrl","querySelector","$parent","timepicker","onEvent","event","containerCoords","currentTarget","getClientRects","x","offsetWidth","pageX","left","y","pageY","top","offsetHeight","atan2","PI","indexOf","on","e","off","$on","provider","LABEL_OK","LABEL_CANCEL","setOKButtonLabel","label","setCancelButtonLabel","$get","timePicker","Date","now","isObject","show","clickOutsideToClose","targetEvent","locals","skipHide","$mdpTimePicker","require","transclude","noFloat","isDefined","mdpNoFloat","placeholder","mdpPlaceholder","openOnClick","mdpOpenOnClick","timeFormat","ngModel","$transclude","updateInputElement","$valid","inputElement","size","inputContainerCtrl","setHasValue","$isEmpty","updateTime","strValue","$setViewValue","$pristine","messages","hasClass","removeClass","$render","onInputElementEvents","target","$viewVaue","clone","append","$error","setInvalid","Object","keys","$formatters","unshift","$validators","modelValue","viewValue","$parsers","parsed","$modelValue","originalModel","seconds","showPicker","ev","DISPLAY_FORMAT","setDisplayFormat","datePicker","animElements","map","a","direction","addClass","$mdpDatePicker","dateFormat","pre","post","updateDate","model","isError","$invalid","month"],"mappings":"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","file":"mdPickers.min.js","sourcesContent":["(function() {\n\"use strict\";\n/* global moment, angular */\r\n\r\nvar module = angular.module(\"mdPickers\", [\r\n\t\"ngMaterial\",\r\n\t\"ngAnimate\",\r\n\t\"ngAria\"\r\n]);\r\n\r\nmodule.config([\"$mdIconProvider\", \"mdpIconsRegistry\", function($mdIconProvider, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$mdIconProvider.icon(icon.id, icon.url);\r\n\t});\r\n}]);\r\n\r\nmodule.run([\"$templateCache\", \"mdpIconsRegistry\", function($templateCache, mdpIconsRegistry) {\r\n\tangular.forEach(mdpIconsRegistry, function(icon, index) {\r\n\t\t$templateCache.put(icon.url, icon.svg);\r\n\t});\r\n}]);\nmodule.constant(\"mdpIconsRegistry\", [\r\n    {\r\n        id: 'mdp-chevron-left',\r\n        url: 'mdp-chevron-left.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-chevron-right',\r\n        url: 'mdp-chevron-right.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-access-time',\r\n        url: 'mdp-access-time.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"/></svg>'\r\n    },\r\n    {\r\n        id: 'mdp-event',\r\n        url: 'mdp-event.svg',\r\n        svg: '<svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>'\r\n    }\r\n]);\nmodule.directive(\"ngMessage\", [\"$mdUtil\", function($mdUtil) {\r\n   return {\r\n        restrict: \"EA\",\r\n        priority: 101,\r\n        compile: function(element) {\r\n            var inputContainer = $mdUtil.getClosest(element, \"mdp-time-picker\", true) ||\r\n                                 $mdUtil.getClosest(element, \"mdp-date-picker\", true);\r\n            \r\n            // If we are not a child of an input container, don't do anything\r\n            if (!inputContainer) return;\r\n            \r\n            // Add our animation class\r\n            element.toggleClass('md-input-message-animation', true);\r\n            \r\n            return {};\r\n        }\r\n    } \r\n}]);\n/* global moment, angular */\n\nfunction TimePickerCtrl($scope, $mdDialog, time, autoSwitch, $mdMedia) {\n\tvar self = this;\n    this.VIEW_HOURS = 1;\n    this.VIEW_MINUTES = 2;\n    this.currentView = this.VIEW_HOURS;\n    this.time = moment(time);\n    this.autoSwitch = !!autoSwitch;\n    console.log(autoSwitch);\n    \n    this.clockHours = parseInt(this.time.format(\"h\"));\n    this.clockMinutes = parseInt(this.time.minutes());\n    \n\t$scope.$mdMedia = $mdMedia;\n\t\n\tthis.switchView = function() {\n\t    self.currentView = self.currentView == self.VIEW_HOURS ? self.VIEW_MINUTES : self.VIEW_HOURS;\n\t};\n    \n\tthis.setAM = function() {\n        if(self.time.hours() >= 12)\n            self.time.hour(self.time.hour() - 12);\n\t};\n    \n    this.setPM = function() {\n        if(self.time.hours() < 12)\n            self.time.hour(self.time.hour() + 12);\n\t};\n    \n    this.cancel = function() {\n        $mdDialog.cancel();\n    };\n\n    this.confirm = function() {\n        $mdDialog.hide(this.time.toDate());\n    };\n}\n\nfunction ClockCtrl($scope) {\n    var TYPE_HOURS = \"hours\";\n    var TYPE_MINUTES = \"minutes\";\n    var self = this;\n    \n    this.STEP_DEG = 360 / 12;\n    this.steps = [];\n    \n    this.CLOCK_TYPES = {\n        \"hours\": {\n            range: 12,\n        },\n        \"minutes\": {\n            range: 60,\n        }\n    }\n    \n    this.getPointerStyle = function() {\n        var divider = 1;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        var degrees = Math.round(self.selected * (360 / divider)) - 180;\n        return { \n            \"-webkit-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"-ms-transform\": \"rotate(\" + degrees + \"deg)\",\n            \"transform\": \"rotate(\" + degrees + \"deg)\"\n        }\n    };\n    \n    this.setTimeByDeg = function(deg) {\n        deg = deg >= 360 ? 0 : deg;\n        var divider = 0;\n        switch(self.type) {\n            case TYPE_HOURS:\n                divider = 12;\n                break;\n            case TYPE_MINUTES:\n                divider = 60;\n                break;\n        }  \n        \n        self.setTime(\n            Math.round(divider / 360 * deg)\n        );\n    };\n    \n    this.setTime = function(time, type) {\n        this.selected = time;\n        \n        switch(self.type) {\n            case TYPE_HOURS:\n                if(self.time.locale(\"en\").format(\"A\") == \"PM\") time += 12;\n                this.time.hours(time);\n                break;\n            case TYPE_MINUTES:\n                if(time > 59) time -= 60;\n                this.time.minutes(time);\n                break;\n        }\n        \n    };\n    \n    this.init = function() {\n        self.type = self.type || \"hours\";\n        switch(self.type) {\n            case TYPE_HOURS:\n                for(var i = 1; i <= 12; i++)\n                    self.steps.push(i);\n                self.selected = self.time.hours() || 0;\n                if(self.selected > 12) self.selected -= 12;\n                    \n                break;\n            case TYPE_MINUTES:\n                for(var i = 5; i <= 55; i+=5)\n                    self.steps.push(i);\n                self.steps.push(0);\n                self.selected = self.time.minutes() || 0;\n                \n                break;\n        }\n    };\n    \n    this.init();\n}\n\nmodule.directive(\"mdpClock\", [\"$animate\", \"$timeout\", function($animate, $timeout) {\n    return {\n        restrict: 'E',\n        bindToController: {\n            'type': '@?',\n            'time': '=',\n            'autoSwitch': '=?'\n        },\n        replace: true,\n        template: '<div class=\"mdp-clock\">' +\n                        '<div class=\"mdp-clock-container\">' +\n                            '<md-toolbar class=\"mdp-clock-center md-primary\"></md-toolbar>' +\n                            '<md-toolbar ng-style=\"clock.getPointerStyle()\" class=\"mdp-pointer md-primary\">' +\n                                '<span class=\"mdp-clock-selected md-button md-raised md-primary\"></span>' +\n                            '</md-toolbar>' +\n                            '<md-button ng-class=\"{ \\'md-primary\\': clock.selected == step }\" class=\"md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}\" ng-repeat=\"step in clock.steps\" ng-click=\"clock.setTime(step)\">{{ step }}</md-button>' +\n                        '</div>' +\n                    '</div>',\n        controller: [\"$scope\", ClockCtrl],\n        controllerAs: \"clock\",\n        link: function(scope, element, attrs, ctrl) {\n            var pointer = angular.element(element[0].querySelector(\".mdp-pointer\")),\n                timepickerCtrl = scope.$parent.timepicker;\n            \n            var onEvent = function(event) {\n                var containerCoords = event.currentTarget.getClientRects()[0];\n                var x = ((event.currentTarget.offsetWidth / 2) - (event.pageX - containerCoords.left)),\n                    y = ((event.pageY - containerCoords.top) - (event.currentTarget.offsetHeight / 2));\n\n                var deg = Math.round((Math.atan2(x, y) * (180 / Math.PI)));\n                $timeout(function() {\n                    ctrl.setTimeByDeg(deg + 180);\n                    if(ctrl.autoSwitch && [\"mouseup\", \"click\"].indexOf(event.type) !== -1 && timepickerCtrl) timepickerCtrl.switchView();\n                });\n            }; \n            \n            element.on(\"mousedown\", function() {\n               element.on(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"mouseup\", function(e) {\n                element.off(\"mousemove\", onEvent);\n            });\n            \n            element.on(\"click\", onEvent);\n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", onEvent);\n                element.off(\"mousemove\", onEvent); \n            });\n        }\n    }\n}]);\n\nmodule.provider(\"$mdpTimePicker\", function() {\n    var LABEL_OK = \"OK\",\n        LABEL_CANCEL = \"Cancel\";\n        \n    this.setOKButtonLabel = function(label) {\n        LABEL_OK = label;\n    };\n    \n    this.setCancelButtonLabel = function(label) {\n        LABEL_CANCEL = label;\n    };\n    \n    this.$get = [\"$mdDialog\", function($mdDialog) {\n        var timePicker = function(time, options) {\n            if(!angular.isDate(time)) time = Date.now();\n            if (!angular.isObject(options)) options = {};\n    \n            return $mdDialog.show({\n                controller:  ['$scope', '$mdDialog', 'time', 'autoSwitch', '$mdMedia', TimePickerCtrl],\n                controllerAs: 'timepicker',\n                clickOutsideToClose: true,\n                template: '<md-dialog aria-label=\"\" class=\"mdp-timepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\n                            '<md-dialog-content layout-gt-xs=\"row\" layout-wrap>' +\n                                '<md-toolbar layout-gt-xs=\"column\" layout-xs=\"row\" layout-align=\"center center\" flex class=\"mdp-timepicker-time md-hue-1 md-primary\">' +\n                                    '<div class=\"mdp-timepicker-selected-time\">' +\n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_HOURS }\" ng-click=\"timepicker.currentView = timepicker.VIEW_HOURS\">{{ timepicker.time.format(\"h\") }}</span>:' + \n                                        '<span ng-class=\"{ \\'active\\': timepicker.currentView == timepicker.VIEW_MINUTES }\" ng-click=\"timepicker.currentView = timepicker.VIEW_MINUTES\">{{ timepicker.time.format(\"mm\") }}</span>' +\n                                    '</div>' +\n                                    '<div layout=\"column\" class=\"mdp-timepicker-selected-ampm\">' + \n                                        '<span ng-click=\"timepicker.setAM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() < 12 }\">AM</span>' +\n                                        '<span ng-click=\"timepicker.setPM()\" ng-class=\"{ \\'active\\': timepicker.time.hours() >= 12 }\">PM</span>' +\n                                    '</div>' + \n                                '</md-toolbar>' +\n                                '<div>' +\n                                    '<div class=\"mdp-clock-switch-container\" ng-switch=\"timepicker.currentView\" layout layout-align=\"center center\">' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"hours\" ng-switch-when=\"1\"></mdp-clock>' +\n\t                                    '<mdp-clock class=\"mdp-animation-zoom\" auto-switch=\"timepicker.autoSwitch\" time=\"timepicker.time\" type=\"minutes\" ng-switch-when=\"2\"></mdp-clock>' +\n                                    '</div>' +\n                                    \n                                    '<md-dialog-actions layout=\"row\">' +\n\t                                \t'<span flex></span>' +\n                                        '<md-button ng-click=\"timepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\n                                        '<md-button ng-click=\"timepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\n                                    '</md-dialog-actions>' +\n                                '</div>' +\n                            '</md-dialog-content>' +\n                        '</md-dialog>',\n                targetEvent: options.targetEvent,\n                locals: {\n                    time: time,\n                    autoSwitch: options.autoSwitch\n                },\n                skipHide: true\n            });\n        };\n    \n        return timePicker;\n    }];\n});\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'E',\n        require: 'ngModel',\n        transclude: true,\n        template: function(element, attrs) {\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\n            \n            return '<div layout layout-align=\"start start\">' +\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\n                        '<md-icon md-svg-icon=\"mdp-access-time\"></md-icon>' +\n                    '</md-button>' +\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\n                        '<input type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\n                    '</md-input-container>' +\n                '</div>';\n        },\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"placeholder\": \"@mdpPlaceholder\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            var inputElement = angular.element(element[0].querySelector('input')),\n                inputContainer = angular.element(element[0].querySelector('md-input-container')),\n                inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\n                \n            $transclude(function(clone) {\n               inputContainer.append(clone); \n            });\n            \n            var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\n            \n            scope.type = scope.timeFormat ? \"text\" : \"time\"\n            scope.timeFormat = scope.timeFormat || \"HH:mm\";\n            scope.autoSwitch = scope.autoSwitch || false;\n            \n            scope.$watch(function() { return ngModel.$error }, function(newValue, oldValue) {\n                inputContainerCtrl.setInvalid(!ngModel.$pristine && !!Object.keys(ngModel.$error).length);\n            }, true);\n            \n            // update input element if model has changed\n            ngModel.$formatters.unshift(function(value) {\n                var time = angular.isDate(value) && moment(value);\n                if(time && time.isValid()) \n                    updateInputElement(time.format(scope.timeFormat));\n            });\n            \n            ngModel.$validators.format = function(modelValue, viewValue) {\n                return !viewValue || angular.isDate(viewValue) || moment(viewValue, scope.timeFormat, true).isValid();\n            };\n            \n            ngModel.$parsers.unshift(function(value) {\n                var parsed = moment(value, scope.timeFormat, true);\n                if(parsed.isValid()) {\n                    if(angular.isDate(ngModel.$modelValue)) {\n                        var originalModel = moment(ngModel.$modelValue);\n                        originalModel.minutes(parsed.minutes());\n                        originalModel.hours(parsed.hours());\n                        originalModel.seconds(parsed.seconds());\n                        \n                        parsed = originalModel;\n                    }\n                    return parsed.toDate(); \n                } else\n                    return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\n            });\n            \n            // update input element value\n            function updateInputElement(value) {\n                if(ngModel.$valid)\n                    inputElement[0].size = value.length + 1;\n                inputElement[0].value = value;\n                inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\n            }\n            \n            function updateTime(time) {\n                var value = moment(time, angular.isDate(time) ? null : scope.timeFormat, true),\n                    strValue = value.format(scope.timeFormat);\n\n                if(value.isValid()) {\n                    updateInputElement(strValue);\n                    ngModel.$setViewValue(strValue);\n                } else {\n                    updateInputElement(time);\n                    ngModel.$setViewValue(time);\n                }\n                \n                if(!ngModel.$pristine && \n                    messages.hasClass(\"md-auto-hide\") && \n                    inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\n                \n                ngModel.$render();\n            }\n                \n            scope.showPicker = function(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    updateTime(time, true);\n                });\n            };\n            \n            function onInputElementEvents(event) {\n                if(event.target.value !== ngModel.$viewVaue)\n                    updateTime(event.target.value);\n            }\n            \n            inputElement.on(\"reset input blur\", onInputElementEvents);\n            \n            scope.$on(\"$destroy\", function() {\n                inputElement.off(\"reset input blur\", onInputElementEvents);\n            })\n        }\n    };\n}]);\n\nmodule.directive(\"mdpTimePicker\", [\"$mdpTimePicker\", \"$timeout\", function($mdpTimePicker, $timeout) {\n    return  {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            \"timeFormat\": \"@mdpFormat\",\n            \"autoSwitch\": \"=?mdpAutoSwitch\",\n        },\n        link: function(scope, element, attrs, ngModel, $transclude) {\n            scope.format = scope.format || \"HH:mm\";\n            function showPicker(ev) {\n                $mdpTimePicker(ngModel.$modelValue, {\n                    targetEvent: ev,\n                    autoSwitch: scope.autoSwitch\n                }).then(function(time) {\n                    ngModel.$setViewValue(moment(time).format(scope.format));\n                    ngModel.$render();\n                });\n            };\n            \n            element.on(\"click\", showPicker);\n            \n            scope.$on(\"$destroy\", function() {\n                element.off(\"click\", showPicker);\n            });\n        }\n    }\n}]);\n\n/* global moment, angular */\r\n\r\nfunction DatePickerCtrl($scope, $mdDialog, $mdMedia, $timeout, currentDate, options) {\r\n    var self = this;\r\n\r\n    this.date = moment(currentDate);\r\n    this.minDate = options.minDate && moment(options.minDate).isValid() ? moment(options.minDate) : null;\r\n    this.maxDate = options.maxDate && moment(options.maxDate).isValid() ? moment(options.maxDate) : null;\r\n    this.displayFormat = options.displayFormat || \"ddd, MMM DD\";\r\n    this.dateFilter = angular.isFunction(options.dateFilter) ? options.dateFilter : null;\r\n    this.selectingYear = false;\r\n    \r\n    // validate min and max date\r\n\tif (this.minDate && this.maxDate) {\r\n\t\tif (this.maxDate.isBefore(this.minDate)) {\r\n\t\t\tthis.maxDate = moment(this.minDate).add(1, 'days');\r\n\t\t}\r\n\t}\r\n\t\r\n\tif (this.date) {\r\n\t\t// check min date\r\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\r\n\t\t\tthis.date = moment(this.minDate);\r\n    \t}\r\n    \t\r\n    \t// check max date\r\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n\t\t\tthis.date = moment(this.maxDate);\r\n    \t}\r\n\t}\r\n\t\r\n\tthis.yearItems = {\r\n        currentIndex_: 0,\r\n        PAGE_SIZE: 5,\r\n        START: (self.minDate ? self.minDate.year() : 1900),\r\n        END: (self.maxDate ? self.maxDate.year() : 0),\r\n        getItemAtIndex: function(index) {\r\n        \tif(this.currentIndex_ < index)\r\n                this.currentIndex_ = index;\r\n        \t\r\n        \treturn this.START + index;\r\n        },\r\n        getLength: function() {\r\n            return Math.min(\r\n                this.currentIndex_ + Math.floor(this.PAGE_SIZE / 2),\r\n                Math.abs(this.START - this.END) + 1\r\n            );\r\n        }\r\n    };\r\n\r\n    $scope.$mdMedia = $mdMedia;\r\n    $scope.year = this.date.year();\r\n\r\n\tthis.selectYear = function(year) {\r\n        self.date.year(year);\r\n        $scope.year = year;\r\n        self.selectingYear = false;\r\n        self.animate();\r\n    };\r\n    \r\n    this.showYear = function() { \r\n        self.yearTopIndex = (self.date.year() - self.yearItems.START) + Math.floor(self.yearItems.PAGE_SIZE / 2);\r\n        self.yearItems.currentIndex_ = (self.date.year() - self.yearItems.START) + 1;\r\n        self.selectingYear = true;\r\n    };\r\n    \r\n    this.showCalendar = function() {\r\n        self.selectingYear = false;\r\n    };\r\n\r\n    this.cancel = function() {\r\n        $mdDialog.cancel();\r\n    };\r\n\r\n    this.confirm = function() {\r\n    \tvar date = this.date;\r\n    \t\r\n    \tif (this.minDate && this.date.isBefore(this.minDate)) {\r\n    \t\tdate = moment(this.minDate);\r\n    \t}\r\n    \t\r\n    \tif (this.maxDate && this.date.isAfter(this.maxDate)) {\r\n    \t\tdate = moment(this.maxDate);\r\n    \t}  \t\r\n    \t\r\n        $mdDialog.hide(date.toDate());\r\n    };\r\n    \r\n    this.animate = function() {\r\n        self.animating = true;\r\n        $timeout(angular.noop).then(function() {\r\n            self.animating = false;\r\n        })  \r\n    };\r\n}\r\n\r\nmodule.provider(\"$mdpDatePicker\", function() {\r\n    var LABEL_OK = \"OK\",\r\n        LABEL_CANCEL = \"Cancel\",\r\n        DISPLAY_FORMAT = \"ddd, MMM DD\";\r\n        \r\n    this.setDisplayFormat = function(format) {\r\n        DISPLAY_FORMAT = format;    \r\n    };\r\n        \r\n    this.setOKButtonLabel = function(label) {\r\n        LABEL_OK = label;\r\n    };\r\n    \r\n    this.setCancelButtonLabel = function(label) {\r\n        LABEL_CANCEL = label;\r\n    };\r\n    \r\n    this.$get = [\"$mdDialog\", function($mdDialog) {\r\n        var datePicker = function(currentDate, options) {\r\n            if (!angular.isDate(currentDate)) currentDate = Date.now();\r\n            if (!angular.isObject(options)) options = {};\r\n            \r\n            options.displayFormat = DISPLAY_FORMAT;\r\n    \r\n            return $mdDialog.show({\r\n                controller:  ['$scope', '$mdDialog', '$mdMedia', '$timeout', 'currentDate', 'options', DatePickerCtrl],\r\n                controllerAs: 'datepicker',\r\n                clickOutsideToClose: true,\r\n                template: '<md-dialog aria-label=\"\" class=\"mdp-datepicker\" ng-class=\"{ \\'portrait\\': !$mdMedia(\\'gt-xs\\') }\">' +\r\n                            '<md-dialog-content layout=\"row\" layout-wrap>' +\r\n                                '<div layout=\"column\" layout-align=\"start center\">' +\r\n                                    '<md-toolbar layout-align=\"start start\" flex class=\"mdp-datepicker-date-wrapper md-hue-1 md-primary\" layout=\"column\">' +\r\n                                        '<span class=\"mdp-datepicker-year\" ng-click=\"datepicker.showYear()\" ng-class=\"{ \\'active\\': datepicker.selectingYear }\">{{ datepicker.date.format(\\'YYYY\\') }}</span>' +\r\n                                        '<span class=\"mdp-datepicker-date\" ng-click=\"datepicker.showCalendar()\" ng-class=\"{ \\'active\\': !datepicker.selectingYear }\">{{ datepicker.date.format(datepicker.displayFormat) }}</span> ' +\r\n                                    '</md-toolbar>' + \r\n                                '</div>' +  \r\n                                '<div>' + \r\n                                    '<div class=\"mdp-datepicker-select-year mdp-animation-zoom\" layout=\"column\" layout-align=\"center start\" ng-if=\"datepicker.selectingYear\">' +\r\n                                        '<md-virtual-repeat-container md-auto-shrink md-top-index=\"datepicker.yearTopIndex\">' +\r\n                                            '<div flex md-virtual-repeat=\"item in datepicker.yearItems\" md-on-demand class=\"repeated-year\">' +\r\n                                                '<span class=\"md-button\" ng-click=\"datepicker.selectYear(item)\" md-ink-ripple ng-class=\"{ \\'md-primary current\\': item == year }\">{{ item }}</span>' +\r\n                                            '</div>' +\r\n                                        '</md-virtual-repeat-container>' +\r\n                                    '</div>' +\r\n                                    '<mdp-calendar ng-if=\"!datepicker.selectingYear\" class=\"mdp-animation-zoom\" date=\"datepicker.date\" min-date=\"datepicker.minDate\" date-filter=\"datepicker.dateFilter\" max-date=\"datepicker.maxDate\"></mdp-calendar>' +\r\n                                    '<md-dialog-actions layout=\"row\">' +\r\n                                    \t'<span flex></span>' +\r\n                                        '<md-button ng-click=\"datepicker.cancel()\" aria-label=\"' + LABEL_CANCEL + '\">' + LABEL_CANCEL + '</md-button>' +\r\n                                        '<md-button ng-click=\"datepicker.confirm()\" class=\"md-primary\" aria-label=\"' + LABEL_OK + '\">' + LABEL_OK + '</md-button>' +\r\n                                    '</md-dialog-actions>' +\r\n                                '</div>' +\r\n                            '</md-dialog-content>' +\r\n                        '</md-dialog>',\r\n                targetEvent: options.targetEvent,\r\n                locals: {\r\n                    currentDate: currentDate,\r\n                    options: options\r\n                },\r\n                skipHide: true\r\n            });\r\n        };\r\n    \r\n        return datePicker;\r\n    }];\r\n});\r\n\r\nfunction CalendarCtrl($scope) {\r\n\tvar self = this;\r\n\tthis.dow = moment.localeData().firstDayOfWeek();\r\n\t\r\n    this.weekDays = [].concat(\r\n        moment.weekdaysMin().slice(\r\n            this.dow\r\n        ),\r\n        moment.weekdaysMin().slice(\r\n            0, \r\n            this.dow\r\n        )\r\n    );\r\n    \r\n    this.daysInMonth = [];\r\n    \r\n    this.getDaysInMonth = function() {\r\n        var days = self.date.daysInMonth(),\r\n            firstDay = moment(self.date).date(1).day() - this.dow;\r\n            \r\n        if(firstDay < 0) firstDay = this.weekDays.length - 1;\r\n            \r\n\r\n        var arr = [];\r\n        for(var i = 1; i <= (firstDay + days); i++) {\r\n            var day = null;\r\n            if(i > firstDay) {\r\n                day =  {\r\n                    value: (i - firstDay),\r\n                    enabled: self.isDayEnabled(moment(self.date).date(i - firstDay).toDate())\r\n                };\r\n            }\r\n            arr.push(day);\r\n        }\r\n \r\n        return arr;\r\n    };\r\n    \r\n    this.isDayEnabled = function(day) {\r\n        return (!this.minDate || this.minDate <= day) && \r\n            (!this.maxDate || this.maxDate >= day) && \r\n            (!self.dateFilter || !self.dateFilter(day));\r\n    };\r\n    \r\n    this.selectDate = function(dom) {\r\n        self.date.date(dom);\r\n    };\r\n\r\n    this.nextMonth = function() {\r\n        self.date.add(1, 'months');\r\n    };\r\n\r\n    this.prevMonth = function() {\r\n        self.date.subtract(1, 'months');\r\n    };\r\n    \r\n    this.updateDaysInMonth = function() {\r\n        self.daysInMonth = self.getDaysInMonth();\r\n    };\r\n    \r\n    $scope.$watch(function() { return  self.date.unix() }, function(newValue, oldValue) {\r\n        if(newValue && newValue !== oldValue)\r\n            self.updateDaysInMonth();\r\n    })\r\n    \r\n    self.updateDaysInMonth();\r\n}\r\n\r\nmodule.directive(\"mdpCalendar\", [\"$animate\", function($animate) {\r\n    return {\r\n        restrict: 'E',\r\n        bindToController: {\r\n            \"date\": \"=\",\r\n            \"minDate\": \"=\",\r\n            \"maxDate\": \"=\",\r\n            \"dateFilter\": \"=\"\r\n        },\r\n        template: '<div class=\"mdp-calendar\">' +\r\n                    '<div layout=\"row\" layout-align=\"space-between center\">' +\r\n                        '<md-button aria-label=\"previous month\" class=\"md-icon-button\" ng-click=\"calendar.prevMonth()\"><md-icon md-svg-icon=\"mdp-chevron-left\"></md-icon></md-button>' +\r\n                        '<div class=\"mdp-calendar-monthyear\" ng-show=\"!calendar.animating\">{{ calendar.date.format(\"MMMM YYYY\") }}</div>' +\r\n                        '<md-button aria-label=\"next month\" class=\"md-icon-button\" ng-click=\"calendar.nextMonth()\"><md-icon md-svg-icon=\"mdp-chevron-right\"></md-icon></md-button>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-align=\"space-around center\" class=\"mdp-calendar-week-days\" ng-show=\"!calendar.animating\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat=\"d in calendar.weekDays track by $index\">{{ d }}</div>' +\r\n                    '</div>' +\r\n                    '<div layout=\"row\" layout-align=\"start center\" layout-wrap class=\"mdp-calendar-days\" ng-class=\"{ \\'mdp-animate-next\\': calendar.animating }\" ng-show=\"!calendar.animating\" md-swipe-left=\"calendar.nextMonth()\" md-swipe-right=\"calendar.prevMonth()\">' +\r\n                        '<div layout layout-align=\"center center\" ng-repeat-start=\"day in calendar.daysInMonth track by $index\" ng-class=\"{ \\'mdp-day-placeholder\\': !day }\">' +\r\n                            '<md-button class=\"md-icon-button md-raised\" aria-label=\"Select day\" ng-if=\"day\" ng-class=\"{ \\'md-accent\\': calendar.date.date() == day.value }\" ng-click=\"calendar.selectDate(day.value)\" ng-disabled=\"!day.enabled\">{{ day.value }}</md-button>' +\r\n                        '</div>' +\r\n                        '<div flex=\"100\" ng-if=\"($index + 1) % 7 == 0\" ng-repeat-end></div>' +\r\n                    '</div>' +\r\n                '</div>',\r\n        controller: [\"$scope\", CalendarCtrl],\r\n        controllerAs: \"calendar\",\r\n        link: function(scope, element, attrs, ctrl) {\r\n            var animElements = [\r\n                element[0].querySelector(\".mdp-calendar-week-days\"),\r\n                element[0].querySelector('.mdp-calendar-days'),\r\n                element[0].querySelector('.mdp-calendar-monthyear')\r\n            ].map(function(a) {\r\n               return angular.element(a); \r\n            });\r\n                \r\n            scope.$watch(function() { return  ctrl.date.format(\"YYYYMM\") }, function(newValue, oldValue) {\r\n                var direction = null;\r\n                \r\n                if(newValue > oldValue)\r\n                    direction = \"mdp-animate-next\";\r\n                else if(newValue < oldValue)\r\n                    direction = \"mdp-animate-prev\";\r\n                \r\n                if(direction) {\r\n                    for(var i in animElements) {\r\n                        animElements[i].addClass(direction);\r\n                        $animate.removeClass(animElements[i], direction);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}]);\r\n\r\nfunction formatValidator(value, format) {\r\n    return !value || angular.isDate(value) || moment(value, format, true).isValid();\r\n}\r\n\r\nfunction minDateValidator(value, format, minDate) {\r\n    var minDate = moment(minDate, \"YYYY-MM-DD\", true);\r\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\r\n    \r\n    return !value || \r\n            angular.isDate(value) || \r\n            !minDate.isValid() || \r\n            date.isAfter(minDate);\r\n}\r\n\r\nfunction maxDateValidator(value, format, maxDate) {\r\n    var maxDate = moment(maxDate, \"YYYY-MM-DD\", true);\r\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\r\n    \r\n    return !value || \r\n            angular.isDate(value) || \r\n            !maxDate.isValid() || \r\n            date.isBefore(maxDate);\r\n}\r\n\r\nfunction filterValidator(value, format, filter) {\r\n    var date = angular.isDate(value) ? moment(value) :  moment(value, format, true);\r\n                \r\n    return !value || \r\n            angular.isDate(value) || \r\n            !angular.isFunction(filter) || \r\n            filter(date);\r\n}\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\r\n    return  {\r\n        restrict: 'E',\r\n        require: 'ngModel',\r\n        transclude: true,\r\n        template: function(element, attrs) {\r\n            var noFloat = angular.isDefined(attrs.mdpNoFloat),\r\n                placeholder = angular.isDefined(attrs.mdpPlaceholder) ? attrs.mdpPlaceholder : \"\",\r\n                openOnClick = angular.isDefined(attrs.mdpOpenOnClick) ? true : false;\r\n            \r\n            return '<div layout layout-align=\"start start\">' +\r\n                    '<md-button class=\"md-icon-button\" ng-click=\"showPicker($event)\">' +\r\n                        '<md-icon md-svg-icon=\"mdp-event\"></md-icon>' +\r\n                    '</md-button>' +\r\n                    '<md-input-container' + (noFloat ? ' md-no-float' : '') + ' md-is-error=\"isError()\">' +\r\n                        '<input type=\"{{ ::type }}\" aria-label=\"' + placeholder + '\" placeholder=\"' + placeholder + '\"' + (openOnClick ? ' ng-click=\"showPicker($event)\" ' : '') + ' />' +\r\n                    '</md-input-container>' +\r\n                '</div>';\r\n        },\r\n        scope: {\r\n            \"minDate\": \"=mdpMinDate\",\r\n            \"maxDate\": \"=mdpMaxDate\",\r\n            \"dateFilter\": \"=mdpDateFilter\",\r\n            \"dateFormat\": \"@mdpFormat\",\r\n            \"placeholder\": \"@mdpPlaceholder\",\r\n            \"noFloat\": \"=mdpNoFloat\",\r\n            \"openOnClick\": \"=mdpOpenOnClick\"\r\n        },\r\n        link: {\r\n            pre: function(scope, element, attrs, ngModel, $transclude) {\r\n                \r\n            },\r\n            post: function(scope, element, attrs, ngModel, $transclude) {\r\n                var inputElement = angular.element(element[0].querySelector('input')),\r\n                    inputContainer = angular.element(element[0].querySelector('md-input-container')),\r\n                    inputContainerCtrl = inputContainer.controller(\"mdInputContainer\");\r\n                    \r\n                $transclude(function(clone) {\r\n                   inputContainer.append(clone); \r\n                });  \r\n                \r\n                var messages = angular.element(inputContainer[0].querySelector(\"[ng-messages]\"));\r\n                \r\n                scope.type = scope.dateFormat ? \"text\" : \"date\"\r\n                scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n                scope.model = ngModel;\r\n                \r\n                scope.isError = function() {\r\n                    return !ngModel.$pristine && !!ngModel.$invalid;\r\n                };\r\n                \r\n                // update input element if model has changed\r\n                ngModel.$formatters.unshift(function(value) {\r\n                    var date = angular.isDate(value) && moment(value);\r\n                    if(date && date.isValid()) \r\n                        updateInputElement(date.format(scope.dateFormat));\r\n                });\r\n                \r\n                ngModel.$validators.format = function(modelValue, viewValue) {\r\n                    return formatValidator(viewValue, scope.dateFormat);\r\n                };\r\n                \r\n                ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                    return minDateValidator(viewValue, scope.dateFormat, scope.minDate);\r\n                };\r\n                \r\n                ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                    return maxDateValidator(viewValue, scope.dateFormat, scope.maxDate);\r\n                };\r\n                \r\n                ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                    return filterValidator(viewValue, scope.dateFormat, scope.dateFilter);\r\n                };\r\n                \r\n                ngModel.$parsers.unshift(function(value) {\r\n                    var parsed = moment(value, scope.dateFormat, true);\r\n                    if(parsed.isValid()) {\r\n                        if(angular.isDate(ngModel.$modelValue)) {\r\n                            var originalModel = moment(ngModel.$modelValue);\r\n                            originalModel.year(parsed.year());\r\n                            originalModel.month(parsed.month());\r\n                            originalModel.date(parsed.date());\r\n                            \r\n                            parsed = originalModel;\r\n                        }\r\n                        return parsed.toDate(); \r\n                    } else\r\n                        return angular.isDate(ngModel.$modelValue) ? ngModel.$modelValue : null;\r\n                });\r\n                \r\n                // update input element value\r\n                function updateInputElement(value) {\r\n                    if(ngModel.$valid)\r\n                        inputElement[0].size = value.length + 1;\r\n                    inputElement[0].value = value;\r\n                    inputContainerCtrl.setHasValue(!ngModel.$isEmpty(value));\r\n                }\r\n                \r\n                function updateDate(date) {\r\n                    var value = moment(date, angular.isDate(date) ? null : scope.dateFormat, true),\r\n                        strValue = value.format(scope.dateFormat);\r\n    \r\n                    if(value.isValid()) {\r\n                        updateInputElement(strValue);\r\n                        ngModel.$setViewValue(strValue);\r\n                    } else {\r\n                        updateInputElement(date);\r\n                        ngModel.$setViewValue(date);\r\n                    }\r\n                    \r\n                    if(!ngModel.$pristine && \r\n                        messages.hasClass(\"md-auto-hide\") && \r\n                        inputContainer.hasClass(\"md-input-invalid\")) messages.removeClass(\"md-auto-hide\");\r\n    \r\n                    ngModel.$render();\r\n                }\r\n                    \r\n                scope.showPicker = function(ev) {\r\n                    $mdpDatePicker(ngModel.$modelValue, {\r\n                \t    minDate: scope.minDate, \r\n                \t    maxDate: scope.maxDate,\r\n                \t    dateFilter: scope.dateFilter,\r\n                \t    targetEvent: ev\r\n            \t    }).then(updateDate);\r\n                };\r\n                \r\n                function onInputElementEvents(event) {\r\n                    if(event.target.value !== ngModel.$viewVaue)\r\n                        updateDate(event.target.value);\r\n                }\r\n                \r\n                inputElement.on(\"reset input blur\", onInputElementEvents);\r\n                \r\n                scope.$on(\"$destroy\", function() {\r\n                    inputElement.off(\"reset input blur\", onInputElementEvents);\r\n                })\r\n            }\r\n        }\r\n    };\r\n}]);\r\n\r\n\r\nmodule.directive(\"mdpDatePicker\", [\"$mdpDatePicker\", \"$timeout\", function($mdpDatePicker, $timeout) {\r\n    return  {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            \"minDate\": \"@min\",\r\n            \"maxDate\": \"@max\",\r\n            \"dateFilter\": \"=mdpDateFilter\",\r\n            \"dateFormat\": \"@mdpFormat\",\r\n        },\r\n        link: function(scope, element, attrs, ngModel, $transclude) {\r\n            scope.dateFormat = scope.dateFormat || \"YYYY-MM-DD\";\r\n            \r\n            ngModel.$validators.format = function(modelValue, viewValue) {\r\n                return formatValidator(viewValue, scope.format);\r\n            };\r\n            \r\n            ngModel.$validators.minDate = function(modelValue, viewValue) {\r\n                return minDateValidator(viewValue, scope.format, scope.minDate);\r\n            };\r\n            \r\n            ngModel.$validators.maxDate = function(modelValue, viewValue) {\r\n                return maxDateValidator(viewValue, scope.format, scope.maxDate);\r\n            };\r\n            \r\n            ngModel.$validators.filter = function(modelValue, viewValue) {\r\n                return filterValidator(viewValue, scope.format, scope.dateFilter);\r\n            };\r\n            \r\n            function showPicker(ev) {\r\n                $mdpDatePicker(ngModel.$modelValue, {\r\n            \t    minDate: scope.minDate, \r\n            \t    maxDate: scope.maxDate,\r\n            \t    dateFilter: scope.dateFilter,\r\n            \t    targetEvent: ev\r\n        \t    }).then(function(time) {\r\n                    ngModel.$setViewValue(moment(time).format(scope.format));\r\n                    ngModel.$render();\r\n                });\r\n            };\r\n            \r\n            element.on(\"click\", showPicker);\r\n            \r\n            scope.$on(\"$destroy\", function() {\r\n                element.off(\"click\", showPicker);\r\n            });\r\n        }\r\n    }\r\n}]);\n})();"],"sourceRoot":"/source/"}